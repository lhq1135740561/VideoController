

if(isDebug.toBoolean()){
    //作为独立App应用运行
    apply plugin: 'com.android.application'
}else {
    //作为组件运行
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//ARouter注解配置
apply plugin: 'kotlin-kapt'
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {

        //如果是独立模块，则使用当前组件的包名
        if(isDebug.toBoolean()){
            applicationId "com.yunge.module_play"
        }

        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        /* ARouter的配置*/
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //统一资源管理(配置统一的资源前缀名称)
    resourcePrefix 'play_'

    sourceSets {
        main {
            if(isDebug.toBoolean()){
                //作为独立App应用运行
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
            }else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/debug/*'
                }
            }
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //添加模块core
    api project(':module-core')

    //添加路由注解
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    api rootProject.ext.lib_arouter_api
    kapt rootProject.ext.lib_arouter_compiler

}
